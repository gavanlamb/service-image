parameters:
  - name: environment
    displayName: Name of the environment to deploy to
    type: string
  - name: region
    displayName: Name of AWS region to deploy into
    type: string
  - name: onTimeout
    displayName: Action to take with manual validation task when timed out
    type: string
  - name: timeoutInMinutes
    displayName: Action to take with manual validation task when timed out
    type: number
    default: 60

jobs:
  - job: plan
    displayName: Plan
    steps:
      - template: aws/iam/configure.yml@templates
      - template: terraform/plan.yml@templates
        parameters:
          artifactName: terraform.${{ parameters.environment }}.${{ parameters.region }}
          planAdditionalCommandOptions: '-var-file="variables/${{ parameters.environment }}.${{ parameters.region }}.tfvars" -var="authorisation_filename=authorisation@$(Build.BuildNumber)/authorisation@$(Build.BuildNumber).zip" -var="resizer_filename=resizer@$(Build.BuildNumber)/resizer@$(Build.BuildNumber).zip"'
          workspaceName: repair-images-delivery-infrastructure-${{ parameters.environment }}

  - template: azure-devops/approve.yml@templates
    parameters:
      dependsOn: plan
      onTimeout: ${{ parameters.onTimeout }}
      timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
      userToNotify: '[Expensely]\Expensely Team'

  - deployment: apply
    displayName: Apply
    dependsOn: plan
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              artifact: authorisation@$(Build.BuildNumber)
            - download: current
              artifact: resizer@$(Build.BuildNumber)
            - template: aws/iam/configure.yml@templates
            - template: terraform/apply.yml@templates
              parameters:
                artifactName: terraform.${{ parameters.environment }}.${{ parameters.region }}
